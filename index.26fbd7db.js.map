{"mappings":"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","sources":["src/js/mouse.js","src/js/scale.js","src/js/tipToggler.js","src/js/mouseVert.js","src/js/mouseClick.js","src/js/model.js","src/js/listeners.js","src/js/runnerToggler.js","src/js/orientToggler.js","src/js/script.js","src/js/config.js"],"sourcesContent":["import { getCoords } from '../js/scale.js';\r\nimport { forTip } from '../js/tipToggler.js';\r\nexport function mouseDownBtnFirst(event) {\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let runnerNumber = Number(config.dataset.runners);\r\n    if (runnerNumber === 1) {\r\n        /* если один бегун */\r\n        mouseDownBtnFirstSingle(event);\r\n    }\r\n    else if (runnerNumber === 2) {\r\n        /* первый бегун (левый) если бегунов два */\r\n        mouseDownBtnFirstDouble(event);\r\n    }\r\n}\r\nexport function mouseDownBtnSecond(event) {\r\n    /* TODO Убирать нельзя - это для тестирования !!! */\r\n    console.log('Вызов из mouseDownBtnSecond');\r\n    /* Для надписи над бегуном */\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let slerNumber = Number(config.dataset.inst);\r\n    let sler = document.querySelectorAll('.ranger')[slerNumber - 1];\r\n    let interval = sler.querySelector('.ranger__interval');\r\n    let btn1 = sler.querySelector('[data-type=\"btn-first\"]');\r\n    let btn2 = sler.querySelector('[data-type=\"btn-second\"]');\r\n    let discreteStatus = config.dataset.discrete;\r\n    /* Для дискретного перемещения */\r\n    let interval_number = Number(config.dataset.scale_length) - 1;\r\n    let slerCoords = getCoords(sler);\r\n    let btn1Coords = getCoords(btn1);\r\n    let btn2Coords = getCoords(btn2);\r\n    let shiftX1 = event.pageX - btn1Coords.left;\r\n    let shiftX2 = event.pageX - btn2Coords.left;\r\n    document.onmousemove = function (event) {\r\n        let left2 = event.pageX - shiftX2 - slerCoords.left;\r\n        let right2 = sler.offsetWidth - btn2.offsetWidth;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            left2 = Number(localStorage.left2_1);\r\n        }\r\n        if (left2 < 0)\r\n            left2 = 0;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            left2 = Number(localStorage.left2_2);\r\n            right2 = Number(localStorage.right2_1);\r\n        }\r\n        if (left2 > right2)\r\n            left2 = right2;\r\n        btn2.style.marginLeft = left2 + 'px';\r\n        config.dataset.btn2_coord = String(left2);\r\n        /* Дублирую, чтобы бегуны не выпадали за пределы слайдера при изменении ширины окна */\r\n        config.dataset.btn2_init_pos = String(left2);\r\n        shiftX1 = event.pageX - btn1Coords.left;\r\n        let left1 = event.pageX - shiftX1 - slerCoords.left;\r\n        let right1 = sler.offsetWidth - btn1.offsetWidth;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            left1 = Number(localStorage.left1_1);\r\n        }\r\n        if (left1 < 0)\r\n            left1 = 0;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            left1 = Number(localStorage.left1_2);\r\n            right1 = Number(localStorage.right1_1);\r\n        }\r\n        if (left1 > right1)\r\n            left1 = right1;\r\n        let discretArr = discreteArray(interval_number, right1);\r\n        let range = discretArr[1] - discretArr[0];\r\n        let integ = Math.floor(left2);\r\n        if (discreteStatus === 'yes') {\r\n            discretArr.forEach((num) => {\r\n                if (integ >= (num - range / 2) && integ < (num + range / 2)) {\r\n                    /* Тестирование */\r\n                    if (localStorage.test) {\r\n                        num = localStorage.num_1;\r\n                        left1 = localStorage.left1_1;\r\n                    }\r\n                    if (num < left1) {\r\n                        interval.style.width = (left1 - num) + 'px';\r\n                        interval.style.marginLeft = num + 'px';\r\n                    }\r\n                    /* Тестирование */\r\n                    if (localStorage.test) {\r\n                        num = localStorage.num_2;\r\n                        left1 = localStorage.left1_2;\r\n                    }\r\n                    if (num >= left1) {\r\n                        interval.style.width = (num - left1) + 'px';\r\n                        interval.style.marginLeft = left1 + 'px';\r\n                    }\r\n                    btn2.style.marginLeft = num + 'px';\r\n                    config.dataset.btn2_coord = String(num);\r\n                    config.dataset.btn2_init_pos = String(num);\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn2_tip = forTip(elem, num);\r\n                    /* Значение над бегуном */\r\n                    btn2.dataset.tip = config.dataset.btn2_tip;\r\n                }\r\n            });\r\n        }\r\n        else if (discreteStatus === 'no') {\r\n            /* Передача значения в конфиг */\r\n            config.dataset.btn2_tip = forTip(elem, left2);\r\n            /* Значение над бегуном */\r\n            btn2.dataset.tip = config.dataset.btn2_tip;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left1 = localStorage.left1_1;\r\n                left2 = localStorage.left2_1;\r\n            }\r\n            if (left1 > left2) {\r\n                interval.style.width = (left1 - left2) + 'px';\r\n                interval.style.marginLeft = left2 + 'px';\r\n            }\r\n            else {\r\n                interval.style.width = (left2 - left1) + 'px';\r\n                interval.style.marginLeft = left1 + 'px';\r\n            }\r\n        }\r\n    };\r\n    document.onmouseup = function () {\r\n        document.onmousemove = document.onmouseup = null;\r\n    };\r\n}\r\nexport function mouseDownBtnFirstSingle(event) {\r\n    /* TODO Убирать нельзя - это для тестирования !!! */\r\n    console.log('Вызов из mouseDownBtnFirstSingle');\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let slerNumber = Number(config.dataset.inst);\r\n    let sler = document.querySelectorAll('.ranger')[slerNumber - 1];\r\n    let interval = sler.querySelector('.ranger__interval');\r\n    let btn1 = sler.querySelector('[data-type=\"btn-first\"]');\r\n    let discreteStatus = config.dataset.discrete;\r\n    /* Для дискретного перемещения */\r\n    let intervalNumber = Number(config.dataset.scale_length) - 1;\r\n    let slerCoords = getCoords(sler);\r\n    let btn1Coords = getCoords(btn1);\r\n    /* Если не учитывать, то будет при первом перемещении бегунка скачок на эту величину */\r\n    /* Это смещение клика от левого края бегунка, изменяется от 0 до ширины бегунка */\r\n    let shiftX1 = event.pageX - btn1Coords.left;\r\n    document.onmousemove = function (event) {\r\n        let left1 = event.pageX - shiftX1 - slerCoords.left;\r\n        let right1 = sler.offsetWidth - btn1.offsetWidth;\r\n        if (discreteStatus === 'yes') {\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left1 = localStorage.left1_1;\r\n            }\r\n            if (left1 < 0)\r\n                left1 = 0;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left1 = Number(localStorage.left1_2);\r\n                right1 = Number(localStorage.right1_1);\r\n            }\r\n            if (left1 > right1)\r\n                left1 = right1;\r\n            let discretArr = discreteArray(intervalNumber, right1);\r\n            let range = discretArr[1] - discretArr[0];\r\n            let integ = Math.floor(left1);\r\n            discretArr.forEach((num) => {\r\n                if (integ < (num + range / 2) && integ > (num - range / 2)) {\r\n                    btn1.style.marginLeft = num + 'px';\r\n                    interval.style.width = num + 'px';\r\n                    config.dataset.btn1_coord = String(num);\r\n                    /* Дублирую, чтобы бегуны не выпадали за пределы слайдера при изменении ширины окна */\r\n                    config.dataset.btn1_init_pos = String(num);\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn1_tip = forTip(elem, num);\r\n                    /* Значение над бегуном */\r\n                    btn1.dataset.tip = config.dataset.btn1_tip;\r\n                }\r\n            });\r\n        }\r\n        else if (discreteStatus === 'no') {\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left1 = Number(localStorage.left1_1);\r\n            }\r\n            if (left1 < 0)\r\n                left1 = 0;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left1 = Number(localStorage.left1_2);\r\n                right1 = Number(localStorage.right1_1);\r\n            }\r\n            if (left1 > right1)\r\n                left1 = right1;\r\n            btn1.style.marginLeft = left1 + 'px';\r\n            interval.style.width = left1 + 'px';\r\n            config.dataset.btn1_coord = String(left1);\r\n            config.dataset.btn1_init_pos = String(left1);\r\n            /* Передача значения в конфиг */\r\n            config.dataset.btn1_tip = forTip(elem, left1);\r\n            /* Значение над бегуном */\r\n            btn1.dataset.tip = config.dataset.btn1_tip;\r\n        }\r\n    };\r\n    document.onmouseup = function () {\r\n        document.onmousemove = document.onmouseup = null;\r\n    };\r\n}\r\nexport function mouseDownBtnFirstDouble(event) {\r\n    /* TODO Убирать нельзя - это для тестирования !!! */\r\n    console.log('Вызов из mouseDownBtnFirstDouble');\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let slerNumber = Number(config.dataset.inst);\r\n    let sler = document.querySelectorAll('.ranger')[slerNumber - 1];\r\n    let interval = sler.querySelector('.ranger__interval');\r\n    let btn1 = sler.querySelector('[data-type=\"btn-first\"]');\r\n    let btn2 = sler.querySelector('[data-type=\"btn-second\"]');\r\n    let discreteStatus = config.dataset.discrete;\r\n    /* Для дискретного перемещения */\r\n    let intervalNumber = Number(config.dataset.scale_length) - 1;\r\n    let slerCoords = getCoords(sler);\r\n    let btn1Coords = getCoords(btn1);\r\n    let btn2Coords = getCoords(btn2);\r\n    /* Если не учитывать, то будет при первом перемещении бегунка скачок на эту величину */\r\n    /* Это смещение клика от левого края бегунка, изменяется от 0 до ширины бегунка */\r\n    let shiftX1 = event.pageX - btn1Coords.left;\r\n    let shiftX2 = event.pageX - btn2Coords.left;\r\n    document.onmousemove = function (event) {\r\n        let left1 = event.pageX - shiftX1 - slerCoords.left;\r\n        let right1 = sler.offsetWidth - btn1.offsetWidth;\r\n        shiftX2 = event.pageX - btn2Coords.left;\r\n        let left2 = event.pageX - shiftX2 - slerCoords.left;\r\n        let right2 = sler.offsetWidth;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            left1 = localStorage.left1_1;\r\n        }\r\n        if (left1 < 0)\r\n            left1 = 0;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            left1 = localStorage.left1_2;\r\n        }\r\n        if (left1 > right1)\r\n            left1 = right1;\r\n        let discretArr = discreteArray(intervalNumber, right1);\r\n        let range = discretArr[1] - discretArr[0];\r\n        let integ = Math.floor(left1);\r\n        if (discreteStatus === 'yes') {\r\n            /* Счётчик для перехода по массиву подписей */\r\n            let counter = 0;\r\n            discretArr.forEach((num) => {\r\n                /* Тестирование */\r\n                if (localStorage.test) {\r\n                    integ = localStorage.integ;\r\n                    num = localStorage.num;\r\n                    range = localStorage.range;\r\n                }\r\n                if (integ < (num + range / 2) && integ > (num - range / 2)) {\r\n                    /* Тестирование */\r\n                    if (localStorage.test) {\r\n                        num = Number(localStorage.num_2);\r\n                        left2 = Number(localStorage.left2);\r\n                    }\r\n                    if (num > left2) {\r\n                        interval.style.width = (num - left2) + 'px';\r\n                        interval.style.marginLeft = left2 + 'px';\r\n                    }\r\n                    /* Тестирование */\r\n                    if (localStorage.test) {\r\n                        num = Number(localStorage.num);\r\n                        left2 = Number(localStorage.left2);\r\n                    }\r\n                    if (num <= left2) {\r\n                        interval.style.width = (left2 - num) + 'px';\r\n                        interval.style.marginLeft = num + 'px';\r\n                    }\r\n                    btn1.style.marginLeft = num + 'px';\r\n                    config.dataset.btn1_coord = String(num);\r\n                    config.dataset.btn1_init_pos = String(num);\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn1_tip = forTip(elem, num);\r\n                    /* Извлечение из конфига значения над бегуном */\r\n                    btn1.dataset.tip = config.dataset.btn1_tip;\r\n                }\r\n                counter += 1;\r\n            });\r\n        }\r\n        else if (discreteStatus === 'no') {\r\n            btn1.style.marginLeft = left1 + 'px';\r\n            config.dataset.btn1_coord = String(left1);\r\n            config.dataset.btn1_init_pos = String(left1);\r\n            /* Передача значения в конфиг */\r\n            config.dataset.btn1_tip = forTip(elem, left1);\r\n            /* Значение над бегуном */\r\n            btn1.dataset.tip = config.dataset.btn1_tip;\r\n            shiftX2 = event.pageX - btn2Coords.left;\r\n            let left2 = event.pageX - shiftX2 - slerCoords.left;\r\n            let right2 = sler.offsetWidth;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left2 = Number(localStorage.left2_1);\r\n            }\r\n            if (left2 < 0)\r\n                left2 = 0;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left2 = Number(localStorage.left2_2);\r\n                right2 = Number(localStorage.right2_1);\r\n            }\r\n            if (left2 > right2)\r\n                left2 = right2;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left1 = Number(localStorage.left1_1);\r\n                left2 = Number(localStorage.left2_3);\r\n            }\r\n            if (left1 > left2) {\r\n                interval.style.width = (left1 - left2) + 'px';\r\n                interval.style.marginLeft = left2 + 'px';\r\n            }\r\n            else {\r\n                interval.style.width = (left2 - left1) + 'px';\r\n                interval.style.marginLeft = left1 + 'px';\r\n            }\r\n        }\r\n    };\r\n    document.onmouseup = function () {\r\n        document.onmousemove = document.onmouseup = null;\r\n    };\r\n}\r\nexport function discreteArray(intervalNumber, length) {\r\n    /* FIXME Если не указать абсолютное значение, бегун будет колебаться??? */\r\n    let interv = length / intervalNumber;\r\n    let discretArr = [];\r\n    let arrCount = 0;\r\n    discretArr.push(0);\r\n    /* Это не итератор, поэтому не меняю на forEach */\r\n    for (let i = 0; i < intervalNumber; i++) {\r\n        arrCount = arrCount + interv;\r\n        discretArr.push(arrCount);\r\n    }\r\n    return discretArr;\r\n}\r\nexport function resetBtnCoord(event) {\r\n    /* TODO Убирать нельзя - это для тестирования !!! */\r\n    console.log('Это resetBtnCoord');\r\n    let elem = event.target;\r\n    const config = elem.parentNode.parentNode.querySelector('.zdslider-config');\r\n    const ranger = elem.parentNode.parentNode.querySelector('.ranger');\r\n    const orientation = config.dataset.orientation;\r\n    config.dataset.btn1_coord = String(0);\r\n    if (orientation === 'horizontal') {\r\n        config.dataset.btn2_coord = String(ranger.offsetWidth);\r\n        config.dataset.btn2_init_pos = String(ranger.offsetWidth);\r\n    }\r\n    else if (orientation === 'vertical') {\r\n        config.dataset.btn2_coord = String(ranger.offsetHeight);\r\n    }\r\n}\r\n","import { Scale, Division, DivisionSpan, ScaleSpan } from '../js/model.js';\r\n/* Получение координат элементов слайдера */\r\nexport function getCoords(elem) {\r\n    let coords = elem.getBoundingClientRect();\r\n    return {\r\n        top: coords.top,\r\n        left: coords.left,\r\n    };\r\n}\r\n/* Массив значений для шкалы по умолчанию */\r\nexport function makeScale(min, max, step) {\r\n    let stepArr = [];\r\n    let dividersArr = [];\r\n    /* Массив размера шага */\r\n    let iterationArr = [];\r\n    /* Член массива размеров шага */\r\n    let iter = 0;\r\n    let maximus = 0;\r\n    let iteration = 0;\r\n    let item = 0;\r\n    if (step > 0) {\r\n        let range = max - min;\r\n        /* Получаю массив делителей без остатка */\r\n        for (let i = 2; i < range / 2 + 1; i++) {\r\n            if (range % i) {\r\n            }\r\n            else {\r\n                dividersArr.push(i);\r\n            }\r\n        }\r\n        if (dividersArr.length > 0) {\r\n            /* Определяю наибольшее количество интервалов меньше 10 */\r\n            for (let el of dividersArr) {\r\n                if (el < 10) {\r\n                    maximus = el;\r\n                    iter = range / maximus;\r\n                    /* Массив размеров шага шкалы */\r\n                    iterationArr.push(iter);\r\n                }\r\n                else {\r\n                    /* Не применил forEach из-за break */\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            stepArr = [min, max];\r\n            return [stepArr, iteration, iterationArr];\r\n        }\r\n        /* Иначе iteration = Infinity */\r\n        if (maximus === 0) {\r\n            stepArr = [min, max];\r\n            return [stepArr, iteration, iterationArr];\r\n        }\r\n        iteration = range / maximus;\r\n        /* Переопределение - этот участок кода применяется при изменении размера шага через панель */\r\n        if (step > 1) {\r\n            iteration = step;\r\n            maximus = range / iteration;\r\n        }\r\n        item = min;\r\n        stepArr.push(min);\r\n        /* Массив значений шкалы */\r\n        for (let i = 0; i < maximus; i++) {\r\n            item = item + iteration;\r\n            stepArr.push(item);\r\n        }\r\n    }\r\n    else {\r\n        stepArr = [min, max];\r\n    }\r\n    return [stepArr, iteration, iterationArr];\r\n}\r\nexport function reScale(scaleArr, currentInst) {\r\n    let parents = document.querySelectorAll('.zdslider');\r\n    parents.forEach((parent) => {\r\n        let config = parent.parentNode.querySelector('.zdslider-config');\r\n        if (Number(config.dataset.inst) == currentInst) {\r\n            let currentRanger = parent.querySelector('.ranger');\r\n            let currentScale = parent.querySelector('.ranger__scale');\r\n            let currentDivision = parent.querySelector('.ranger__scale-division');\r\n            let orientation = config.dataset.orientation;\r\n            currentScale.remove();\r\n            currentDivision.remove();\r\n            /* Для дискретного перемещения */\r\n            config.dataset.scale_length = String(scaleArr.length);\r\n            let division = new Division(orientation);\r\n            division.appendTo(parent);\r\n            scaleArr.forEach((el) => {\r\n                let span = new DivisionSpan(orientation);\r\n                span.appendTo(division);\r\n            });\r\n            let scale = new Scale(orientation);\r\n            scale.appendTo(parent);\r\n            scaleArr.forEach((el) => {\r\n                let span = new ScaleSpan(orientation);\r\n                span.appendTo(scale);\r\n                span.inner_HTML(el);\r\n            });\r\n        }\r\n    });\r\n}\r\n/* Изменение инпута переключения шага  */\r\nexport function modifyScaleInput(parent, iteration, iterationsArr) {\r\n    let confInputStep = parent.querySelector('.zdslider-panel__step');\r\n    confInputStep.setAttribute('data-steps', String(iterationsArr));\r\n    confInputStep.setAttribute('data-iteration', String(iteration));\r\n    confInputStep.setAttribute('data-current', String(iteration));\r\n    if (iterationsArr.length !== 0) {\r\n        confInputStep.disabled = false;\r\n        confInputStep.setAttribute('max', String(iterationsArr[0]));\r\n        confInputStep.setAttribute('min', String(iterationsArr[iterationsArr.length - 1]));\r\n    }\r\n    else {\r\n        /* Если интервалов для шкалы нет, то делаю инпут неактивным */\r\n        confInputStep.disabled = true;\r\n    }\r\n    confInputStep.value = confInputStep.dataset.iteration;\r\n}\r\n","export function showTip(elem, orientation) {\r\n    let parent = elem.parentNode.parentNode.querySelector('.zdslider');\r\n    let parentRanger = parent.querySelector('.ranger');\r\n    let buttons = parentRanger.querySelectorAll('.ranger__button');\r\n    buttons.forEach((elem) => {\r\n        if (orientation === 'horizontal') {\r\n            elem.classList.add('ranger__button-tip');\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            elem.classList.add('ranger-vert__button-tip');\r\n        }\r\n    });\r\n}\r\nexport function hideTip(elem) {\r\n    let parent = elem.parentNode.parentNode.querySelector('.zdslider');\r\n    let tip = elem.parentNode.querySelector('.zdslider-panel__check-tip');\r\n    /* Сбрасываю флаг надписи */\r\n    tip.checked = false;\r\n    let parentRanger = parent.querySelector('.ranger');\r\n    let buttons = parentRanger.querySelectorAll('.ranger__button');\r\n    /* Удаляю стили ярлыков */\r\n    buttons.forEach((elem) => {\r\n        elem.classList.remove('ranger__button-tip');\r\n        elem.classList.remove('ranger-vert__button-tip');\r\n    });\r\n}\r\nexport function forTip(target, coord) {\r\n    const config = target.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    const configMin = Number(config.dataset.min);\r\n    const configMax = Number(config.dataset.max);\r\n    const rangerHeight = Number(config.dataset.height);\r\n    const rangerWidth = Number(config.dataset.width);\r\n    const orientation = config.dataset.orientation;\r\n    if (orientation === 'horizontal') {\r\n        return Math.round(((configMax - configMin) / (rangerWidth - 12)) * (coord)) + configMin;\r\n    }\r\n    else if (orientation === 'vertical') {\r\n        return Math.round(((configMax - configMin) / rangerHeight) * (coord)) + configMin;\r\n    }\r\n}\r\nexport function reValueTip(element) {\r\n    /* Изменение значения атрибута tip  при изменении min, max в панели */\r\n    let parent = element.parentNode.parentNode;\r\n    let zdslider = parent.querySelector('.zdslider');\r\n    let input = parent.querySelector('.zdslider-panel__check-tip');\r\n    input.checked = false;\r\n    let buttons = zdslider.querySelectorAll('.ranger__button');\r\n    buttons.forEach((elem) => {\r\n        elem.dataset.tip = '';\r\n    });\r\n    hideTip(element);\r\n}\r\n","import { getCoords } from '../js/scale.js';\r\nimport { forTip } from '../js/tipToggler.js';\r\nimport { discreteArray } from '../js/mouse.js';\r\nexport function mouseVertDownBtnFirst(event) {\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let runner_number = Number(config.dataset.runners);\r\n    if (runner_number === 1) {\r\n        /* если один бегун */\r\n        mouseVertDownBtnFirstSingle(event);\r\n    }\r\n    else if (runner_number === 2) {\r\n        /* первый бегун (левый) если бегунов два */\r\n        mouseVertDownBtnFirstDouble(event);\r\n    }\r\n}\r\nexport function mouseVertDownBtnSecond(event) {\r\n    /* TODO Убирать нельзя - это для тестирования !!! */\r\n    console.log('Вызов из mouseVertDownBtnSecond');\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let slerNumber = Number(config.dataset.inst);\r\n    let sler = document.querySelectorAll('.ranger')[slerNumber - 1];\r\n    let interval = sler.querySelector('.ranger__interval');\r\n    let btn1 = sler.querySelector('[data-type=\"btn-first\"]');\r\n    let btn2 = sler.querySelector('[data-type=\"btn-second\"]');\r\n    let discreteStatus = config.dataset.discrete;\r\n    /* Для дискретного перемещения */\r\n    let intervalNumber = Number(config.dataset.scale_length) - 1;\r\n    let slerCoords = getCoords(sler);\r\n    let btn1Coords = getCoords(btn1);\r\n    let btn2Coords = getCoords(btn2);\r\n    let shiftY1 = event.pageY - btn1Coords.top;\r\n    let shiftY2 = event.pageY - btn2Coords.top;\r\n    document.onmousemove = function (event) {\r\n        let top2 = event.pageY - shiftY2 - slerCoords.top;\r\n        let down2 = sler.offsetHeight;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            top2 = Number(localStorage.top2_3);\r\n        }\r\n        if (top2 < 0)\r\n            top2 = 0;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            top2 = Number(localStorage.top2_4);\r\n            down2 = Number(localStorage.down2_4);\r\n        }\r\n        if (top2 > down2)\r\n            top2 = down2;\r\n        btn2.style.marginTop = top2 + 'px';\r\n        shiftY1 = event.pageY - btn1Coords.top;\r\n        let top1 = event.pageY - shiftY1 - slerCoords.top;\r\n        let down1 = sler.offsetHeight;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            top1 = Number(localStorage.top1_3);\r\n        }\r\n        if (top1 < 0)\r\n            top1 = 0;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            top1 = Number(localStorage.top1_4);\r\n            down1 = Number(localStorage.down1_4);\r\n        }\r\n        if (top1 > down1)\r\n            top1 = down1;\r\n        let discretArr = discreteArray(intervalNumber, down2);\r\n        let range = discretArr[1] - discretArr[0];\r\n        let integ = Math.floor(top2);\r\n        if (discreteStatus === 'yes') {\r\n            discretArr.forEach((num) => {\r\n                /* Тестирование */\r\n                if (localStorage.test) {\r\n                    integ = Number(localStorage.integ);\r\n                    num = Number(localStorage.num);\r\n                    range = Number(localStorage.range);\r\n                }\r\n                if (integ >= (num - range / 2) && integ < (num + range / 2)) {\r\n                    /* Тестирование */\r\n                    if (localStorage.test) {\r\n                        num = Number(localStorage.num1_1);\r\n                        top1 = Number(localStorage.top1_1);\r\n                    }\r\n                    if (num < top1) {\r\n                        interval.style.height = (top1 - num) + 'px';\r\n                        interval.style.marginTop = num + 'px';\r\n                    }\r\n                    /* Тестирование */\r\n                    if (localStorage.test) {\r\n                        num = Number(localStorage.num1_2);\r\n                        top1 = Number(localStorage.top1_2);\r\n                    }\r\n                    if (num >= top1) {\r\n                        interval.style.height = (num - top1) + 'px';\r\n                        interval.style.marginTop = top1 + 'px';\r\n                    }\r\n                    btn2.style.marginTop = num + 'px';\r\n                    let coords = sler.offsetHeight - num;\r\n                    config.dataset.btn2_coord = String(coords);\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn2_tip = String(forTip(elem, coords));\r\n                    /* Значение над бегуном */\r\n                    btn2.dataset.tip = config.dataset.btn2_tip;\r\n                }\r\n            });\r\n        }\r\n        else if (discreteStatus === 'no') {\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top1 = Number(localStorage.top1_1);\r\n                top2 = Number(localStorage.top2_1);\r\n            }\r\n            if (top1 > top2) {\r\n                interval.style.height = (top1 - top2) + 'px';\r\n                interval.style.marginTop = top2 + 'px';\r\n            }\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top1 = Number(localStorage.top1_2);\r\n                top2 = Number(localStorage.top2_2);\r\n            }\r\n            if (top1 <= top2) {\r\n                interval.style.height = (top2 - top1) + 'px';\r\n                interval.style.marginTop = top1 + 'px';\r\n            }\r\n            let coords = sler.offsetHeight - top2;\r\n            config.dataset.btn2_coord = String(coords);\r\n            /* Передача значения в конфиг */\r\n            config.dataset.btn2_tip = String(forTip(elem, coords));\r\n            /* Значение над бегуном */\r\n            btn2.dataset.tip = config.dataset.btn2_tip;\r\n        }\r\n    };\r\n    document.onmouseup = function () {\r\n        document.onmousemove = document.onmouseup = null;\r\n    };\r\n}\r\nfunction mouseVertDownBtnFirstSingle(event) {\r\n    /* TODO Убирать нельзя - это для тестирования !!! */\r\n    console.log('Вызов из mouseVertDownBtnFirstSingle');\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let slerNumber = Number(config.dataset.inst);\r\n    let sler = document.querySelectorAll('.ranger')[slerNumber - 1];\r\n    let interval = sler.querySelector('.ranger__interval');\r\n    let btn1 = sler.querySelector('[data-type=\"btn-first\"]');\r\n    let discreteStatus = config.dataset.discrete;\r\n    /* Для дискретного перемещения */\r\n    let intervalNumber = Number(config.dataset.scale_length) - 1;\r\n    let slerCoords = getCoords(sler);\r\n    let btn1Coords = getCoords(btn1);\r\n    /* Если не учитывать, то будет при первом перемещении бегунка скачок на эту величину */\r\n    /* Это смещение клика от левого края бегунка, изменяется от 0 до ширины бегунка */\r\n    let shiftY1 = event.pageY - btn1Coords.top;\r\n    document.onmousemove = function (event) {\r\n        let top1 = event.pageY - shiftY1 - slerCoords.top;\r\n        let down1 = sler.offsetHeight;\r\n        if (discreteStatus === 'yes') {\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top1 = Number(localStorage.top1_1);\r\n            }\r\n            if (top1 < 0)\r\n                top1 = 0;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top1 = Number(localStorage.top1_2);\r\n                down1 = Number(localStorage.down1_2);\r\n            }\r\n            if (top1 > down1)\r\n                top1 = down1;\r\n            let discretArr = discreteArray(intervalNumber, down1);\r\n            let range = discretArr[1] - discretArr[0];\r\n            let integ = Math.floor(top1);\r\n            discretArr.forEach((num) => {\r\n                /* Тестрование */\r\n                if (localStorage.test) {\r\n                    integ = Number(localStorage.integ);\r\n                    num = Number(localStorage.num);\r\n                    range = Number(localStorage.range);\r\n                }\r\n                if (integ < (num + range / 2) && integ > (num - range / 2)) {\r\n                    btn1.style.marginTop = num + 'px';\r\n                    interval.style.marginTop = num + 'px';\r\n                    interval.style.height = sler.offsetHeight - num + 'px';\r\n                    /* Инвертирование значения */\r\n                    let coords = sler.offsetHeight - num;\r\n                    config.dataset.btn1_coord = String(coords);\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn1_tip = String(forTip(elem, coords));\r\n                    /* Значение над бегуном */\r\n                    btn1.dataset.tip = config.dataset.btn1_tip;\r\n                }\r\n            });\r\n        }\r\n        else if (discreteStatus === 'no') {\r\n            /* Тестрование */\r\n            if (localStorage.test) {\r\n                top1 = Number(localStorage.top1_1);\r\n            }\r\n            if (top1 < 0)\r\n                top1 = 0;\r\n            /* Тестрование */\r\n            if (localStorage.test) {\r\n                top1 = Number(localStorage.top1_2);\r\n                down1 = Number(localStorage.down1_2);\r\n            }\r\n            if (top1 > down1)\r\n                top1 = down1;\r\n            btn1.style.marginTop = top1 + 'px';\r\n            interval.style.marginTop = top1 + 'px';\r\n            interval.style.height = sler.offsetHeight - top1 + 'px';\r\n            /* Инвертирование значения */\r\n            let coords = sler.offsetHeight - top1;\r\n            config.dataset.btn1_coord = String(coords);\r\n            /* Передача значения в конфиг */\r\n            config.dataset.btn1_tip = String(forTip(elem, coords));\r\n            /* Значение над бегуном */\r\n            btn1.dataset.tip = config.dataset.btn1_tip;\r\n        }\r\n    };\r\n    document.onmouseup = function () {\r\n        document.onmousemove = document.onmouseup = null;\r\n    };\r\n}\r\nfunction mouseVertDownBtnFirstDouble(event) {\r\n    /* TODO Убирать нельзя - это для тестирования !!! */\r\n    console.log('Вызов из mouseVertDownBtnFirstDouble');\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let slerNumber = Number(config.dataset.inst);\r\n    let sler = document.querySelectorAll('.ranger')[slerNumber - 1];\r\n    let interval = sler.querySelector('.ranger__interval');\r\n    let btn1 = sler.querySelector('[data-type=\"btn-first\"]');\r\n    let btn2 = sler.querySelector('[data-type=\"btn-second\"]');\r\n    let discreteStatus = config.dataset.discrete;\r\n    let intervalNumber = Number(config.dataset.scale_length) - 1; /* Для дискретного перемещения */\r\n    let slerCoords = getCoords(sler);\r\n    let btn1Coords = getCoords(btn1);\r\n    let btn2Coords = getCoords(btn2);\r\n    /* Если не учитывать, то будет при первом перемещении бегунка скачок на эту величину */\r\n    /* Это смещение клика от левого края бегунка, изменяется от 0 до ширины бегунка */\r\n    let shiftY1 = event.pageY - btn1Coords.top;\r\n    let shiftY2 = event.pageY - btn2Coords.top;\r\n    document.onmousemove = function (event) {\r\n        let top1 = event.pageY - shiftY1 - slerCoords.top;\r\n        let down1 = sler.offsetHeight;\r\n        shiftY2 = event.pageY - btn2Coords.top;\r\n        let top2 = event.pageY - shiftY2 - slerCoords.top;\r\n        let down2 = sler.offsetHeight;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            top1 = Number(localStorage.top1_1);\r\n        }\r\n        if (top1 < 0)\r\n            top1 = 0;\r\n        /* Тестирование */\r\n        if (localStorage.test) {\r\n            top1 = Number(localStorage.top1_2);\r\n            down1 = Number(localStorage.down1_2);\r\n        }\r\n        if (top1 > down1)\r\n            top1 = down1;\r\n        let discretArr = discreteArray(intervalNumber, down1);\r\n        let range = discretArr[1] - discretArr[0];\r\n        let integ = Math.floor(top1);\r\n        if (discreteStatus === 'yes') {\r\n            let counter = 0;\r\n            discretArr.forEach((num) => {\r\n                /* Тестирование */\r\n                if (localStorage.test) {\r\n                    integ = Number(localStorage.integ);\r\n                    num = Number(localStorage.num);\r\n                    range = Number(localStorage.range);\r\n                }\r\n                if (integ < (num + range / 2) && integ > (num - range / 2)) {\r\n                    /* Тестирование */\r\n                    if (localStorage.test) {\r\n                        num = Number(localStorage.num1_1);\r\n                        top2 = Number(localStorage.top2_1);\r\n                    }\r\n                    if (num > top2) {\r\n                        interval.style.height = (num - top2) + 'px';\r\n                        interval.style.marginTop = top2 + 'px';\r\n                    }\r\n                    /* Тестирование */\r\n                    if (localStorage.test) {\r\n                        num = Number(localStorage.num1_2);\r\n                        top2 = Number(localStorage.top2_2);\r\n                    }\r\n                    if (num <= top2) {\r\n                        interval.style.height = (top2 - num) + 'px';\r\n                        interval.style.marginTop = num + 'px';\r\n                    }\r\n                    btn1.style.marginTop = num + 'px';\r\n                    let coords = sler.offsetHeight - num;\r\n                    config.dataset.btn1_coord = String(coords);\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn1_tip = String(forTip(elem, coords));\r\n                    /* Значение над бегуном */\r\n                    btn1.dataset.tip = config.dataset.btn1_tip;\r\n                }\r\n                counter += 1;\r\n            });\r\n        }\r\n        else if (discreteStatus === 'no') {\r\n            btn1.style.marginTop = top1 + 'px';\r\n            shiftY2 = event.pageY - btn2Coords.top;\r\n            let top2 = event.pageY - shiftY2 - slerCoords.top;\r\n            let down2 = sler.offsetHeight;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top2 = Number(localStorage.top2_1);\r\n            }\r\n            if (top2 < 0)\r\n                top2 = 0;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top2 = Number(localStorage.top2_2);\r\n                down2 = Number(localStorage.down2_2);\r\n            }\r\n            if (top2 > down2)\r\n                top2 = down2;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top1 = Number(localStorage.top1_3);\r\n                top2 = Number(localStorage.top2_3);\r\n            }\r\n            if (top1 > top2) {\r\n                interval.style.height = (top1 - top2) + 'px';\r\n                interval.style.marginTop = top2 + 'px';\r\n            }\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top1 = Number(localStorage.top1_4);\r\n                top2 = Number(localStorage.top2_4);\r\n            }\r\n            if (top1 <= top2) {\r\n                interval.style.height = (top2 - top1) + 'px';\r\n                interval.style.marginTop = top1 + 'px';\r\n            }\r\n            let coords = sler.offsetHeight - top1;\r\n            config.dataset.btn1_coord = String(coords);\r\n            /* Передача значения в конфиг */\r\n            config.dataset.btn1_tip = String(forTip(elem, coords));\r\n            /* Значение над бегуном */\r\n            btn1.dataset.tip = config.dataset.btn1_tip;\r\n        }\r\n    };\r\n    document.onmouseup = function () {\r\n        document.onmousemove = document.onmouseup = null;\r\n    };\r\n}\r\n","import { getCoords } from '../js/scale.js';\r\nimport { forTip } from '../js/tipToggler.js';\r\nexport function clickMouse(event) {\r\n    /* TODO Убирать нельзя - это для тестирования !!! */\r\n    console.log('Вызов из mouseClick');\r\n    let elem = event.target;\r\n    let division = elem.parentNode.parentNode.querySelector('.ranger__scale-division');\r\n    /* FIXIT Если клик на риску то ничего не произойдёт */\r\n    /* Этот блок только если клик был на .ranger__scale-division */\r\n    if (event.target === division) {\r\n        const config = elem.parentNode.parentNode.querySelector('.zdslider-config');\r\n        const buttonsNumber = Number(config.dataset.runners);\r\n        const orientation = config.dataset.orientation;\r\n        const btn1 = elem.parentNode.querySelector('[data-type=\"btn-first\"]');\r\n        const btn2 = elem.parentNode.querySelector('[data-type=\"btn-second\"]');\r\n        const interval = elem.parentNode.querySelector('.ranger__interval');\r\n        const target = elem.parentNode.querySelector('.ranger__button');\r\n        let divisionLeft, divisionTop, numberForTip;\r\n        if (orientation === 'horizontal') {\r\n            let divisionCoord = getCoords(division);\r\n            /* Половина ширины бегуна, чтобы выставить его по центру клика */\r\n            let halfWidth = btn1.offsetWidth / 2;\r\n            let clientX = event.clientX;\r\n            let pageX = event.pageX;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                clientX = Number(localStorage.client_1);\r\n                pageX = Number(localStorage.page_1);\r\n            }\r\n            /* Если левый край слайдера выходит за пределы страницы при увеличении масштаба */\r\n            if (clientX < pageX) {\r\n                divisionLeft = event.pageX - event.clientX + divisionCoord.left;\r\n            }\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                clientX = Number(localStorage.client_2);\r\n                pageX = Number(localStorage.page_2);\r\n            }\r\n            if (clientX >= pageX) {\r\n                divisionLeft = divisionCoord.left;\r\n            }\r\n            let left = event.pageX - divisionLeft - halfWidth;\r\n            let right = division.offsetWidth - btn1.offsetWidth;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left = Number(localStorage.left_1);\r\n            }\r\n            /* Чтобы бегун не выходил за границу слева */\r\n            if (left < 0)\r\n                left = 0;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                left = Number(localStorage.left_2);\r\n                right = Number(localStorage.right_2);\r\n            }\r\n            /* Чтобы бегун не выходил за границу справа */\r\n            if (left > right)\r\n                left = right;\r\n            if (buttonsNumber === 1) {\r\n                btn1.style.marginLeft = left + 'px';\r\n                interval.style.width = left + 'px';\r\n                /* Передача значения в конфиг */\r\n                config.dataset.btn1_tip = forTip(target, left);\r\n                /* Значение над бегуном */\r\n                btn1.dataset.tip = config.dataset.btn1_tip;\r\n            }\r\n            else if (buttonsNumber === 2) {\r\n                let left1 = Number(config.dataset.btn1_coord);\r\n                let left2 = Number(config.dataset.btn2_coord);\r\n                let division_offsetWidth = division.offsetWidth;\r\n                /* Тестирование */\r\n                if (localStorage.test) {\r\n                    left = Number(localStorage.left_3);\r\n                    division_offsetWidth = Number(localStorage.division_3);\r\n                }\r\n                if (left < (division_offsetWidth / 2)) {\r\n                    left1 = left;\r\n                    /* Передача текущей координаты в конфиг */\r\n                    config.dataset.btn1_coord = String(left);\r\n                    btn1.style.marginLeft = left1 + 'px';\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn1_tip = forTip(target, left);\r\n                    /* Значение над бегуном */\r\n                    btn1.dataset.tip = config.dataset.btn1_tip;\r\n                }\r\n                /* Тестирование */\r\n                if (localStorage.test) {\r\n                    left = Number(localStorage.left_4);\r\n                    division_offsetWidth = Number(localStorage.division_4);\r\n                }\r\n                if (left >= (division_offsetWidth / 2)) {\r\n                    left2 = left;\r\n                    config.dataset.btn2_coord = String(left);\r\n                    btn2.style.marginLeft = left2 + 'px';\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn2_tip = forTip(target, left);\r\n                    /* Значение над бегуном */\r\n                    btn2.dataset.tip = config.dataset.btn2_tip;\r\n                }\r\n                interval.style.width = (left2 - left1) + 'px';\r\n                interval.style.marginLeft = left1 + 'px';\r\n            }\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            let division_coord = getCoords(division);\r\n            let clientY = event.clientY;\r\n            let pageY = event.pageY;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                clientY = Number(localStorage.client_1);\r\n                pageY = Number(localStorage.page_1);\r\n            }\r\n            /* Если верхний край слайдера выходит за пределы страницы при увеличении масштаба */\r\n            if (clientY < pageY) {\r\n                divisionTop = event.pageY - event.clientY + division_coord.top;\r\n            }\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                clientY = Number(localStorage.client_2);\r\n                pageY = Number(localStorage.page_2);\r\n            }\r\n            if (clientY >= pageY) {\r\n                divisionTop = division_coord.top;\r\n            }\r\n            let top = event.pageY - divisionTop;\r\n            let bottom = division.offsetHeight;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top = Number(localStorage.top_1);\r\n            }\r\n            /* Чтобы бегун не выходил за границу сверху */\r\n            if (top < 0)\r\n                top = 0;\r\n            /* Тестирование */\r\n            if (localStorage.test) {\r\n                top = Number(localStorage.top_2);\r\n                bottom = Number(localStorage.bottom_2);\r\n            }\r\n            /* Чтобы бегун не выходил за границу снизу */\r\n            if (top > bottom)\r\n                top = bottom;\r\n            if (buttonsNumber === 1) {\r\n                btn1.style.marginTop = top + 'px';\r\n                interval.style.marginTop = top + 'px';\r\n                interval.style.height = division.offsetHeight - top + 'px';\r\n                numberForTip = division.offsetHeight - top;\r\n                /* Передача значения в конфиг */\r\n                config.dataset.btn1_tip = forTip(target, numberForTip);\r\n                /* Значение над бегуном */\r\n                btn1.dataset.tip = config.dataset.btn1_tip;\r\n            }\r\n            else if (buttonsNumber === 2) {\r\n                let top1 = Number(config.dataset.btn1_coord);\r\n                let top2 = Number(config.dataset.btn2_coord);\r\n                let divisionOffsetHeight = division.offsetHeight;\r\n                /* Тестирование */\r\n                if (localStorage.test) {\r\n                    top = Number(localStorage.top_3);\r\n                    divisionOffsetHeight = Number(localStorage.division_3);\r\n                }\r\n                if (top > (divisionOffsetHeight / 2)) {\r\n                    top1 = top;\r\n                    /* Передача текущей координаты в конфиг */\r\n                    config.dataset.btn1_coord = String(division.offsetHeight - top);\r\n                    btn1.style.marginTop = top1 + 'px';\r\n                    numberForTip = division.offsetHeight - top;\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn1_tip = forTip(target, numberForTip);\r\n                    /* Значение над бегуном */\r\n                    btn1.dataset.tip = config.dataset.btn1_tip;\r\n                }\r\n                /* Тестирование */\r\n                if (localStorage.test) {\r\n                    top = Number(localStorage.top_4);\r\n                    divisionOffsetHeight = Number(localStorage.division_4);\r\n                }\r\n                if (top < (divisionOffsetHeight / 2)) {\r\n                    top2 = top;\r\n                    config.dataset.btn2_coord = String(division.offsetHeight - top);\r\n                    btn2.style.marginTop = top2 + 'px';\r\n                    numberForTip = division.offsetHeight - top;\r\n                    /* Передача значения в конфиг */\r\n                    config.dataset.btn2_tip = forTip(target, numberForTip);\r\n                    /* Значение над бегуном */\r\n                    btn2.dataset.tip = config.dataset.btn2_tip;\r\n                }\r\n                /* Проще и правильнее взять из модели */\r\n                top1 = Number(config.dataset.btn1_coord);\r\n                top2 = Number(config.dataset.btn2_coord);\r\n                interval.style.height = (top2 - top1) + 'px';\r\n                interval.style.marginTop = division.offsetHeight - top2 + 'px';\r\n            }\r\n        }\r\n    }\r\n}\r\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _Button_instances, _Button_setup, _Division_instances, _Division_setup, _Panel_instances, _Panel_setup;\r\nimport { mouseDownBtnFirst, mouseDownBtnSecond, } from '../js/mouse.js';\r\nimport { mouseVertDownBtnFirst, mouseVertDownBtnSecond, } from '../js/mouseVert.js';\r\nimport { clickMouse } from '../js/mouseClick.js';\r\nexport class Ranger {\r\n    constructor(orientation) {\r\n        this.$el = document.createElement('div');\r\n        this.$el.classList.add('ranger');\r\n        this.$el.setAttribute('data-type', 'ranger');\r\n        if (orientation === 'horizontal') {\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            this.$el.classList.add('ranger-vert');\r\n        }\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$el);\r\n    }\r\n}\r\nexport class Interval {\r\n    constructor(orientation) {\r\n        this.$el = document.createElement('div');\r\n        this.$el.classList.add('ranger__interval');\r\n        this.$el.setAttribute('data-type', 'interval');\r\n        if (orientation === 'horizontal') {\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            this.$el.classList.add('ranger-vert__interval');\r\n        }\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$el);\r\n    }\r\n}\r\nexport class Button {\r\n    constructor(orientation) {\r\n        _Button_instances.add(this);\r\n        this.$el = document.createElement('button');\r\n        this.$el.classList.add('ranger__button');\r\n        if (orientation === 'horizontal') {\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            this.$el.classList.add('ranger-vert__button');\r\n        }\r\n        __classPrivateFieldGet(this, _Button_instances, \"m\", _Button_setup).call(this);\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$el);\r\n    }\r\n    setAttribute(attr, number) {\r\n        this.$el.setAttribute(attr, number);\r\n    }\r\n    clickHandler(event) {\r\n        let elem = event.target;\r\n        const { type } = elem.dataset;\r\n        let config_dataset = elem.parentNode.parentNode.parentNode.querySelector('.zdslider-config');\r\n        const { orientation } = config_dataset.dataset;\r\n        if (orientation === 'horizontal') {\r\n            if (type === 'btn-first') {\r\n                mouseDownBtnFirst(event);\r\n            }\r\n            if (type === 'btn-second') {\r\n                mouseDownBtnSecond(event);\r\n            }\r\n        }\r\n        if (orientation === 'vertical') {\r\n            if (type === 'btn-first') {\r\n                mouseVertDownBtnFirst(event);\r\n            }\r\n            if (type === 'btn-second') {\r\n                mouseVertDownBtnSecond(event);\r\n            }\r\n        }\r\n    }\r\n}\r\n_Button_instances = new WeakSet(), _Button_setup = function _Button_setup() {\r\n    /* Только для местных функций */\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n    this.$el.addEventListener('mousedown', this.clickHandler);\r\n};\r\nexport class Scale {\r\n    constructor(orientation) {\r\n        this.$el = document.createElement('div');\r\n        this.$el.classList.add('ranger__scale');\r\n        if (orientation === 'horizontal') {\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            this.$el.classList.add('ranger-vert__scale');\r\n        }\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$el);\r\n    }\r\n    appendChild(child) {\r\n        this.$el.appendChild(child);\r\n    }\r\n}\r\nexport class ScaleSpan {\r\n    constructor(orientation) {\r\n        this.$el = document.createElement('span');\r\n        this.$el.classList.add('ranger__scale-span');\r\n        if (orientation === 'horizontal') {\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            this.$el.classList.add('ranger-vert__scale-span');\r\n        }\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$el);\r\n    }\r\n    inner_HTML(child) {\r\n        this.$el.innerHTML = child;\r\n    }\r\n}\r\nexport class Division {\r\n    constructor(orientation) {\r\n        _Division_instances.add(this);\r\n        this.$el = document.createElement('div');\r\n        this.$el.classList.add('ranger__scale-division');\r\n        if (orientation === 'horizontal') {\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            this.$el.classList.add('ranger-vert__scale-division');\r\n        }\r\n        __classPrivateFieldGet(this, _Division_instances, \"m\", _Division_setup).call(this);\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$el);\r\n    }\r\n    appendChild(child) {\r\n        this.$el.appendChild(child);\r\n    }\r\n    clickHandler(event) {\r\n        clickMouse(event);\r\n    }\r\n}\r\n_Division_instances = new WeakSet(), _Division_setup = function _Division_setup() {\r\n    /* Только для местных функций */\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n    this.$el.addEventListener('click', this.clickHandler);\r\n};\r\nexport class DivisionSpan {\r\n    constructor(orientation) {\r\n        this.$el = document.createElement('span');\r\n        this.$el.classList.add('ranger__scale-division-span');\r\n        if (orientation === 'horizontal') {\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            this.$el.classList.add('ranger-vert__scale-division-span');\r\n        }\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$el);\r\n    }\r\n}\r\nexport class Panel {\r\n    constructor() {\r\n        _Panel_instances.add(this);\r\n        this.$panel = document.createElement('div');\r\n        this.$panel.classList.add('zdslider-panel');\r\n        this.$runCheckbox = document.createElement('input');\r\n        this.$runCheckbox.classList.add('zdslider-panel__check-runners');\r\n        this.$runCheckbox.setAttribute('type', 'checkbox');\r\n        this.$runCheckbox.setAttribute('data-run', 'run');\r\n        this.$discreteCheckbox = document.createElement('input');\r\n        this.$discreteCheckbox.classList.add('zdslider-panel__check-discrete');\r\n        this.$discreteCheckbox.setAttribute('type', 'checkbox');\r\n        this.$discreteCheckbox.setAttribute('data-discrete', 'discrete');\r\n        this.$tipCheckbox = document.createElement('input');\r\n        this.$tipCheckbox.classList.add('zdslider-panel__check-tip');\r\n        this.$tipCheckbox.setAttribute('type', 'checkbox');\r\n        this.$tipCheckbox.setAttribute('data-tip', 'tip');\r\n        this.$orientCheckbox = document.createElement('input');\r\n        this.$orientCheckbox.classList.add('zdslider-panel__check-orient');\r\n        this.$orientCheckbox.setAttribute('type', 'checkbox');\r\n        this.$orientCheckbox.setAttribute('data-orient', 'orient');\r\n        this.$minNumber = document.createElement('input');\r\n        this.$minNumber.classList.add('zdslider-panel__min');\r\n        this.$minNumber.setAttribute('type', 'number');\r\n        this.$maxNumber = document.createElement('input');\r\n        this.$maxNumber.classList.add('zdslider-panel__max');\r\n        this.$maxNumber.setAttribute('type', 'number');\r\n        this.$stepNumber = document.createElement('input');\r\n        this.$stepNumber.classList.add('zdslider-panel__step');\r\n        this.$stepNumber.setAttribute('type', 'number');\r\n        this.$stepNumber.setAttribute('onkeydown', 'return false');\r\n        this.$runLabel = document.createElement('label');\r\n        this.$runLabel.innerHTML = '1 Бегун';\r\n        this.$discreteLabel = document.createElement('label');\r\n        this.$discreteLabel.innerHTML = 'Дискретный';\r\n        this.$tipLabel = document.createElement('label');\r\n        this.$tipLabel.innerHTML = 'Ярлык';\r\n        this.$orientLabel = document.createElement('label');\r\n        this.$orientLabel.innerHTML = 'Вертикальный';\r\n        this.$minLable = document.createElement('label');\r\n        this.$minLable.innerHTML = 'Минимум';\r\n        this.$maxLabel = document.createElement('label');\r\n        this.$maxLabel.innerHTML = 'Максимум';\r\n        this.$stepLabel = document.createElement('label');\r\n        this.$stepLabel.innerHTML = 'Шаг';\r\n        this.$panel.appendChild(this.$runCheckbox);\r\n        this.$panel.appendChild(this.$runLabel);\r\n        this.$panel.appendChild(document.createElement('br'));\r\n        this.$panel.appendChild(this.$discreteCheckbox);\r\n        this.$panel.appendChild(this.$discreteLabel);\r\n        this.$panel.appendChild(document.createElement('br'));\r\n        this.$panel.appendChild(this.$tipCheckbox);\r\n        this.$panel.appendChild(this.$tipLabel);\r\n        this.$panel.appendChild(document.createElement('br'));\r\n        this.$panel.appendChild(this.$orientCheckbox);\r\n        this.$panel.appendChild(this.$orientLabel);\r\n        this.$panel.appendChild(document.createElement('br'));\r\n        this.$panel.appendChild(this.$minNumber);\r\n        this.$panel.appendChild(this.$minLable);\r\n        this.$panel.appendChild(document.createElement('br'));\r\n        this.$panel.appendChild(this.$maxNumber);\r\n        this.$panel.appendChild(this.$maxLabel);\r\n        this.$panel.appendChild(document.createElement('br'));\r\n        this.$panel.appendChild(this.$stepNumber);\r\n        this.$panel.appendChild(this.$stepLabel);\r\n        this.$panel.appendChild(document.createElement('br'));\r\n        __classPrivateFieldGet(this, _Panel_instances, \"m\", _Panel_setup).call(this);\r\n    }\r\n    clickHandler(event) {\r\n        let elem = event.target;\r\n        let { run } = elem.dataset;\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$panel);\r\n    }\r\n}\r\n_Panel_instances = new WeakSet(), _Panel_setup = function _Panel_setup() {\r\n    /* Только для местных функций */\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n    this.$panel.addEventListener('click', this.clickHandler);\r\n};\r\nexport class Settings {\r\n    constructor() {\r\n        this.$el = document.createElement('div');\r\n        this.$el.classList.add('zdslider-config');\r\n    }\r\n    appendTo(parent) {\r\n        parent.appendChild(this.$el);\r\n    }\r\n    setAttribute(attr, number) {\r\n        this.$el.setAttribute(attr, number);\r\n    }\r\n}\r\n","import { makeScale, reScale, modifyScaleInput } from '../js/scale.js';\r\nimport { oneRunner, twoRunners } from './runnerToggler.js';\r\nimport { showTip, hideTip, reValueTip } from '../js/tipToggler.js';\r\nimport { orientationToggler } from '../js/orientToggler.js';\r\nimport { resetBtnCoord } from '../js/mouse.js';\r\n/* Переключение количества ползунков через панель */\r\nexport function allChecksListener(event) {\r\n    /* HTMLInputElement - т.к. метода checked нет для HTMLElement */\r\n    let elem = event.target;\r\n    let { run } = elem.dataset;\r\n    let { discrete } = elem.dataset;\r\n    let { tip } = elem.dataset;\r\n    let { orient } = elem.dataset;\r\n    let ranger = elem.parentNode.parentNode.querySelector('.ranger');\r\n    let config = elem.parentNode.parentNode.querySelector('.zdslider-config');\r\n    /* Извлечение из конфига флага ориентации */\r\n    let orientation = config.dataset.orientation;\r\n    /* Извлечение из конфига номера экземпляра слайдера */\r\n    let instant = config.dataset.inst;\r\n    if (run && elem.checked) {\r\n        oneRunner(elem);\r\n        /* Скрываю надписи */\r\n        hideTip(elem);\r\n        resetBtnCoord(event);\r\n    }\r\n    else if (run && (!elem.checked)) {\r\n        twoRunners(elem, instant);\r\n        hideTip(elem);\r\n        resetBtnCoord(event);\r\n    }\r\n    /* Дискретный / плавный ход */\r\n    if (discrete && elem.checked) {\r\n        config.dataset.discrete = 'yes';\r\n    }\r\n    else if (discrete && !elem.checked) {\r\n        config.dataset.discrete = 'no';\r\n    }\r\n    /* Подписи к бегунам */\r\n    if (tip && elem.checked) {\r\n        let element = event.target;\r\n        showTip(element, orientation);\r\n    }\r\n    else if (tip && !elem.checked) {\r\n        hideTip(elem, orientation);\r\n    }\r\n    /* Смена ориентации */\r\n    if (orient && elem.checked) {\r\n        /* Передача в конфиг флага ориентации */\r\n        config.dataset.orientation = 'vertical';\r\n        /* Извлечение из конфига флага ориентации */\r\n        orientation = config.dataset.orientation;\r\n        orientationToggler(elem, orientation);\r\n        resetBtnCoord(event);\r\n    }\r\n    else if (orient && (elem.checked === false)) {\r\n        config.dataset.orientation = 'horizontal';\r\n        orientation = config.dataset.orientation;\r\n        orientationToggler(elem, orientation);\r\n        resetBtnCoord(event);\r\n    }\r\n}\r\nexport function changeMinListener(event) {\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let parent = elem.parentNode;\r\n    let min = Number(elem.value);\r\n    let maxInput = parent.querySelector('.zdslider-panel__max');\r\n    let max = Number(maxInput.value);\r\n    /* Указал произвольный шаг */\r\n    let step = 1;\r\n    let newScaleArr = makeScale(min, max, step);\r\n    /* Передаю в конфиг */\r\n    config.dataset.min = String(min);\r\n    config.dataset.max = String(max);\r\n    reValueTip(elem);\r\n    let iteration = newScaleArr[1];\r\n    let iterationsArr = newScaleArr[2];\r\n    modifyScaleInput(parent, iteration, iterationsArr);\r\n    /* ВНИМАНИЕ!!!! Здесь определил числовое значение как строку */\r\n    let currentInst = config.dataset.inst;\r\n    /* Ограничитель, чтобы max не превышал min */\r\n    maxInput.setAttribute('min', String(min));\r\n    /* Перестроение шкалы по новому значению min */\r\n    reScale(newScaleArr[0], currentInst);\r\n}\r\nexport function changeMaxListener(event) {\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let parent = elem.parentNode;\r\n    let minInput = parent.querySelector('.zdslider-panel__min');\r\n    let min = Number(minInput.value);\r\n    let max = Number(elem.value);\r\n    /* Указал произвольный шаг */\r\n    let step = 1;\r\n    /* получение массивов */\r\n    let newScaleArr = makeScale(min, max, step);\r\n    /* Передаю в конфиг */\r\n    config.dataset.min = String(min);\r\n    config.dataset.max = String(max);\r\n    reValueTip(elem);\r\n    let iteration = newScaleArr[1];\r\n    let iterationsArr = newScaleArr[2];\r\n    modifyScaleInput(parent, iteration, iterationsArr);\r\n    let currentInst = config.dataset.inst;\r\n    /* Ограничитель, чтобы min не превышал max */\r\n    minInput.setAttribute('max', String(max));\r\n    /* Перестроение шкалы по новому значению min */\r\n    reScale(newScaleArr[0], currentInst);\r\n}\r\nexport function changeStepListener(event) {\r\n    let elem = event.target;\r\n    let config = elem.parentNode.parentNode.querySelector('.zdslider-config');\r\n    let parent = elem.parentNode;\r\n    let minInput = parent.querySelector('.zdslider-panel__min');\r\n    let maxInput = parent.querySelector('.zdslider-panel__max');\r\n    let min = Number(minInput.value);\r\n    let max = Number(maxInput.value);\r\n    let val = Number(elem.value);\r\n    let current = Number(elem.dataset.current);\r\n    let arr = elem.dataset.steps.split(',');\r\n    let arrNumber = arr.map(parseFloat);\r\n    /* Индекс текущего шага шкалы в массиве */\r\n    let currentIndex = arrNumber.indexOf(current);\r\n    if (localStorage.test) {\r\n        current = Number(localStorage.current_1);\r\n        val = Number(localStorage.val_1);\r\n    }\r\n    if (current < val) {\r\n        elem.dataset.current = String(arrNumber[currentIndex - 1]);\r\n        elem.value = String(arrNumber[currentIndex - 1]);\r\n    }\r\n    if (localStorage.test) {\r\n        current = Number(localStorage.current_2);\r\n        val = Number(localStorage.val_2);\r\n    }\r\n    if (current > val) {\r\n        elem.dataset.current = String(arrNumber[currentIndex + 1]);\r\n        elem.value = String(arrNumber[currentIndex + 1]);\r\n    }\r\n    let currentInst = config.dataset.inst;\r\n    /* val после изменения на значение из массива */\r\n    let step = Number(elem.value);\r\n    let newScaleArr = makeScale(min, max, step);\r\n    /* Перестроение шкалы по новому значению шага */\r\n    reScale(newScaleArr[0], currentInst);\r\n}\r\n/* Сдвиг бегунов при изменении размера окна */\r\nwindow.addEventListener('resize', function () {\r\n    let config = document.body.querySelector('.zdslider-config');\r\n    let ranger = document.body.querySelector('.ranger');\r\n    let interval = document.body.querySelector('.ranger__interval');\r\n    let btn1 = document.body.querySelector('[data-type=\"btn-first\"]');\r\n    let btn2 = document.body.querySelector('[data-type=\"btn-second\"]');\r\n    let btn1InitPos = config.dataset.btn1_init_pos;\r\n    let btn2InitPos = config.dataset.btn2_init_pos;\r\n    if (ranger.offsetWidth == Number(btn2InitPos) || ranger.offsetWidth < Number(btn2InitPos) ||\r\n        ranger.offsetWidth == Number(btn1InitPos) || ranger.offsetWidth < Number(btn1InitPos)) {\r\n        config.dataset.btn2_init_pos = String(ranger.offsetWidth - btn2.offsetWidth);\r\n        btn1.style.marginLeft = 0 + 'px';\r\n        btn2.style.marginLeft = config.dataset.btn2_init_pos + 'px';\r\n        interval.style.marginLeft = 0 + 'px';\r\n        interval.style.width = config.dataset.btn2_init_pos + 'px';\r\n        console.log(btn1InitPos);\r\n    }\r\n});\r\n","import { Button } from '../js/model.js';\r\nexport function oneRunner(elem) {\r\n    var _a, _b;\r\n    let config = (_b = (_a = elem.parentNode) === null || _a === void 0 ? void 0 : _a.parentNode) === null || _b === void 0 ? void 0 : _b.querySelector('.zdslider-config');\r\n    let orientation = config.dataset.orientation;\r\n    let ranger = elem.parentNode.parentNode.querySelector('.ranger');\r\n    let interval = ranger.querySelector('.ranger__interval');\r\n    let button1 = ranger.querySelector('[data-type=\"btn-first\"]');\r\n    let button2 = ranger.querySelector('[data-type=\"btn-second\"]');\r\n    config.dataset.runners = '1';\r\n    /* Обнуляю надпись над бегуном */\r\n    button1.setAttribute('data-tip', '');\r\n    button2.remove();\r\n    if (orientation == 'horizontal') {\r\n        interval.style.width = (ranger.offsetWidth) + 'px';\r\n        interval.style.marginLeft = '0px';\r\n        button1.style.marginLeft = (ranger.offsetWidth - button1.offsetWidth) + 'px';\r\n    }\r\n    else if (orientation == 'vertical') {\r\n        interval.style.width = 5 + 'px';\r\n        interval.style.height = ranger.offsetHeight + 'px';\r\n        interval.style.marginTop = 0 + 'px';\r\n        button1.style.marginTop = 0 + 'px';\r\n    }\r\n}\r\nexport function twoRunners(elem, inst) {\r\n    var _a, _b;\r\n    let config = (_b = (_a = elem.parentNode) === null || _a === void 0 ? void 0 : _a.parentNode) === null || _b === void 0 ? void 0 : _b.querySelector('.zdslider-config');\r\n    let orientation = config.dataset.orientation;\r\n    let ranger = elem.parentNode.parentNode.querySelector('.ranger');\r\n    config.dataset.runners = '2';\r\n    let button1 = ranger.querySelector('[data-type=\"btn-first\"]');\r\n    /* Обнуляю надпись над бегуном */\r\n    button1.setAttribute('data-tip', '');\r\n    let secondButton = new Button();\r\n    secondButton.setAttribute('data-type', 'btn-second');\r\n    secondButton.setAttribute('data-inst', inst);\r\n    /* Обнуляю надпись над бегуном */\r\n    secondButton.setAttribute('data-tip', '');\r\n    secondButton.appendTo(ranger);\r\n    let button2 = ranger.querySelector('[data-type=\"btn-second\"]');\r\n    let interval = ranger.querySelector('.ranger__interval');\r\n    if (orientation == 'horizontal') {\r\n        interval.style.width = ranger.offsetWidth + 'px';\r\n        button1.style.marginLeft = '0px';\r\n        button2.style.marginLeft = (ranger.offsetWidth - button1.offsetWidth) + 'px';\r\n    }\r\n    else if (orientation == 'vertical') {\r\n        interval.style.width = 5 + 'px';\r\n        interval.style.height = ranger.offsetHeight + 'px';\r\n        interval.style.marginTop = 0 + 'px';\r\n        button1.style.marginTop = ranger.offsetHeight + 'px';\r\n        button2.classList.add('ranger-vert__button');\r\n        button2.style.marginTop = 0 + 'px';\r\n    }\r\n}\r\n","import { hideTip } from '../js/tipToggler.js';\r\nexport function orientationToggler(elem, orientation) {\r\n    let zdslider = elem.parentNode.parentNode.querySelector('.zdslider');\r\n    let ranger = zdslider.querySelector('.ranger');\r\n    let rangerInterval = zdslider.querySelector('.ranger__interval');\r\n    let rangerScale = zdslider.querySelector('.ranger__scale');\r\n    let rangerScaleDivision = zdslider.querySelector('.ranger__scale-division');\r\n    let rangerScaleDivisionSpans = zdslider.querySelectorAll('.ranger__scale-division-span');\r\n    let rangerButtons = zdslider.querySelectorAll('.ranger__button');\r\n    let config = elem.parentNode.parentNode.querySelector('.zdslider-config');\r\n    /* Сброс флага ярлыка */\r\n    hideTip(elem);\r\n    if (orientation === 'vertical') {\r\n        zdslider.classList.add('zdslider-vert');\r\n        ranger.classList.add('ranger-vert');\r\n        rangerInterval.classList.add('ranger-vert__interval');\r\n        rangerScale.classList.add('ranger-vert__scale');\r\n        rangerScaleDivision.classList.add('ranger-vert__scale-division');\r\n        rangerInterval.style.height = (ranger.offsetHeight) + 'px';\r\n        rangerInterval.style.width = 5 + 'px';\r\n        rangerInterval.style.marginLeft = 0 + 'px';\r\n        config.dataset.width = String(ranger.offsetWidth);\r\n        config.dataset.height = String(ranger.offsetHeight);\r\n        rangerScaleDivisionSpans.forEach((elem) => {\r\n            elem.classList.add('ranger-vert__scale-division-span');\r\n        });\r\n        for (let elem of rangerButtons) {\r\n            elem.classList.add('ranger-vert__button');\r\n            /* Сброс значений ярлыков */\r\n            elem.dataset.tip = '';\r\n            /* Количество бегунов */\r\n            if (rangerButtons.length === 1) {\r\n                elem.style.marginTop = 0 + 'px';\r\n                elem.style.marginLeft = 0 + 'px';\r\n            }\r\n            else if (rangerButtons.length === 2) {\r\n                if (elem.dataset.type === 'btn-first') {\r\n                    elem.style.marginTop = ranger.offsetHeight + 'px';\r\n                    elem.style.marginLeft = 0 + 'px';\r\n                }\r\n                else if (elem.dataset.type === 'btn-second') {\r\n                    elem.style.marginTop = 0 + 'px';\r\n                    elem.style.marginLeft = 0 + 'px';\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (orientation === 'horizontal') {\r\n        zdslider.classList.remove('zdslider-vert');\r\n        ranger.classList.remove('ranger-vert');\r\n        rangerInterval.classList.remove('ranger-vert__interval');\r\n        rangerScale.classList.remove('ranger-vert__scale');\r\n        rangerScaleDivision.classList.remove('ranger-vert__scale-division');\r\n        /* Переопределение стиля интервала после определения класса */\r\n        rangerInterval.style.width = ranger.offsetWidth + 'px';\r\n        rangerInterval.style.height = 5 + 'px';\r\n        rangerInterval.style.marginTop = 0 + 'px';\r\n        config.dataset.width = String(ranger.offsetWidth);\r\n        config.dataset.height = String(ranger.offsetHeight);\r\n        rangerScaleDivisionSpans.forEach((elem) => {\r\n            elem.classList.remove('ranger-vert__scale-division-span');\r\n        });\r\n        rangerButtons.forEach((elem) => {\r\n            elem.classList.remove('ranger-vert__button');\r\n            elem.classList.remove('ranger-vert__button-tip');\r\n            elem.dataset.tip = '';\r\n            /* Сброс значений ярлыков. Новые значения из панели */\r\n            if (rangerButtons.length === 1) {\r\n                elem.style.marginLeft = (ranger.offsetWidth - elem.offsetWidth) + 2 + 'px';\r\n                elem.style.marginTop = 0 + 'px';\r\n            }\r\n            else if (rangerButtons.length === 2) {\r\n                if (elem.dataset.type === 'btn-first') {\r\n                    elem.style.marginLeft = 0 + 'px';\r\n                    elem.style.marginTop = 0 + 'px';\r\n                }\r\n                else if (elem.dataset.type === 'btn-second') {\r\n                    elem.style.marginLeft = (ranger.offsetWidth - elem.offsetWidth) + 'px';\r\n                    elem.style.marginTop = 0 + 'px';\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Ranger, Interval, Button, Scale, ScaleSpan, Division, DivisionSpan, Settings, Panel, } from '../js/model.js';\r\nimport { changeMinListener, changeMaxListener, changeStepListener, allChecksListener } from '../js/listeners.js';\r\nimport { getCoords, makeScale } from '../js/scale.js';\r\nimport { configObj, } from '../js/config.js';\r\nwindow.onload = sliderInit();\r\nexport function sliderInit() {\r\n    let runnerNumber = configObj.runner_number;\r\n    let min = configObj.min;\r\n    let max = configObj.max;\r\n    let step = 1;\r\n    let discrete = configObj.discrete;\r\n    let orientation = configObj.orientation;\r\n    let scaleArrs = makeScale(min, max, step);\r\n    /* Массив значений шкалы */\r\n    let scaleArr = scaleArrs[0];\r\n    let iteration = scaleArrs[1];\r\n    let iterationsArr = scaleArrs[2];\r\n    let elements = document.querySelectorAll('.zdslider');\r\n    if (elements.length != 0) {\r\n        /* Создание структуры слайдера */\r\n        setStructure(runnerNumber, min, max, discrete, orientation, scaleArr, iteration, iterationsArr);\r\n        /* Первоначальное размещение слайдера */\r\n        sliderPositioning(runnerNumber, orientation);\r\n    }\r\n    let numberOfSliders = document.querySelectorAll('.zdslider-panel');\r\n    numberOfSliders.forEach((elem) => {\r\n        /* Слушатель переключателей */\r\n        elem.addEventListener('click', allChecksListener);\r\n    });\r\n}\r\n/* Структура слайдера */\r\nexport function setStructure(runners, min, max, discrete, orientation, scaleArr, iteration, iterationsArr) {\r\n    let elements = document.querySelectorAll('.zdslider');\r\n    /* Счётчик количества слайдеров для создания атрибутов */\r\n    let counter = 1;\r\n    /*  Счётчик цикла для определенияя номера ranger в массиве */\r\n    let i = 0;\r\n    elements.forEach((elem) => {\r\n        if (orientation === 'horizontal') {\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            elem.classList.add('zdslider-vert');\r\n        }\r\n        let ranger = new Ranger(orientation);\r\n        ranger.appendTo(elem);\r\n        let interval = new Interval(orientation);\r\n        let rangerDiv = document.querySelectorAll('.ranger')[i];\r\n        interval.appendTo(rangerDiv);\r\n        if (runners === 2) {\r\n            let button_1 = new Button(orientation);\r\n            let button_2 = new Button(orientation);\r\n            button_1.setAttribute('data-type', 'btn-first');\r\n            button_2.setAttribute('data-type', 'btn-second');\r\n            button_1.appendTo(rangerDiv);\r\n            button_2.appendTo(rangerDiv);\r\n        }\r\n        else {\r\n            let button_1 = new Button(orientation);\r\n            button_1.setAttribute('data-type', 'btn-first');\r\n            button_1.appendTo(rangerDiv);\r\n        }\r\n        let division = new Division(orientation);\r\n        scaleArr.forEach((el) => {\r\n            let span = new DivisionSpan(orientation);\r\n            span.appendTo(division);\r\n        });\r\n        division.appendTo(elem);\r\n        let scale = new Scale(orientation);\r\n        scaleArr.forEach((el) => {\r\n            let span = new ScaleSpan(orientation);\r\n            span.appendTo(scale);\r\n            span.inner_HTML(el);\r\n        });\r\n        scale.appendTo(elem);\r\n        /* Слой для обмена данными между Моделью и Контроллером, Моделью и Представлением */\r\n        let settings = new Settings();\r\n        settings.setAttribute('data-inst', counter);\r\n        settings.setAttribute('data-runners', runners);\r\n        settings.setAttribute('data-min', min);\r\n        settings.setAttribute('data-max', max);\r\n        settings.setAttribute('data-discrete', discrete);\r\n        settings.setAttribute('data-orientation', orientation);\r\n        settings.setAttribute('data-tip', 'no');\r\n        /* Для дискретного перемещения */\r\n        settings.setAttribute('data-scale_length', scaleArr.length);\r\n        /* Координаты первого бегуна */\r\n        settings.setAttribute('data-btn1_coord', 0);\r\n        /* Координаты второго бегуна */\r\n        settings.setAttribute('data-btn2_coord', rangerDiv.offsetWidth);\r\n        settings.setAttribute('data-width', String(rangerDiv.offsetWidth));\r\n        settings.setAttribute('data-height', String(rangerDiv.offsetHeight));\r\n        let button_1_div = document.querySelectorAll('[data-type=\"btn-first\"]')[i];\r\n        settings.setAttribute('data-button_width', String(button_1_div.offsetWidth));\r\n        settings.appendTo(elem.parentNode);\r\n        let panel = new Panel();\r\n        panel.appendTo(elem.parentNode);\r\n        let confInputMin = document.querySelectorAll('.zdslider-panel__min')[i];\r\n        confInputMin.setAttribute('data-min', String(min));\r\n        confInputMin.setAttribute('data-max', String(max));\r\n        confInputMin.value = String(min);\r\n        confInputMin.addEventListener('change', changeMinListener);\r\n        let confInputMax = document.querySelectorAll('.zdslider-panel__max')[i];\r\n        confInputMax.setAttribute('data-min', String(min));\r\n        confInputMax.setAttribute('data-max', String(max));\r\n        confInputMax.value = String(max);\r\n        confInputMax.addEventListener('change', changeMaxListener);\r\n        let confInputStep = document.querySelectorAll('.zdslider-panel__step')[i];\r\n        confInputStep.setAttribute('data-steps', String(iterationsArr));\r\n        confInputStep.setAttribute('data-iteration', String(iteration));\r\n        confInputStep.setAttribute('data-current', String(iteration));\r\n        if (iterationsArr.length !== 0) {\r\n            confInputStep.setAttribute('max', String(iterationsArr[0]));\r\n            confInputStep.setAttribute('min', String(iterationsArr[iterationsArr.length - 1]));\r\n        }\r\n        else {\r\n            /* Если интервалов для шкалы нет, то делаю инпут неактивным */\r\n            confInputStep.disabled = true;\r\n        }\r\n        confInputStep.value = confInputStep.dataset.iteration;\r\n        confInputStep.addEventListener('input', changeStepListener);\r\n        counter += 1;\r\n        i += 1;\r\n    });\r\n}\r\n/* Первоначальное размещение слайдера */\r\nexport function sliderPositioning(runners, orientation) {\r\n    let elements = document.querySelectorAll('.zdslider');\r\n    let i = 0;\r\n    elements.forEach((elem) => {\r\n        let ranger = document.querySelectorAll('.ranger')[i];\r\n        let interval = document.querySelectorAll('.ranger__interval')[i];\r\n        let button1 = document.querySelectorAll('[data-type=\"btn-first\"]')[i];\r\n        let config = document.querySelectorAll('.zdslider-config')[i];\r\n        if (orientation === 'horizontal') {\r\n            interval.style.width = (config.dataset.width) + 'px';\r\n        }\r\n        else if (orientation === 'vertical') {\r\n            /* 5 - это ширина риски шкалы */\r\n            interval.style.height = Number(config.dataset.height) - 5 + 'px';\r\n        }\r\n        if (runners === 1) {\r\n            if (orientation == 'horizontal') {\r\n                button1.style.marginLeft = (Number(config.dataset.width) - Number(config.dataset.button_width)) + 2 + 'px';\r\n                initialButtonPosition(i, runners);\r\n            }\r\n            else if (orientation == 'vertical') {\r\n                button1.style.marginTop = 0 + 'px';\r\n            }\r\n        }\r\n        if (runners === 2) {\r\n            if (orientation === 'horizontal') {\r\n                button1.style.marginLeft = '0px';\r\n                let button2 = document.querySelectorAll('[data-type=\"btn-second\"]')[i];\r\n                button2.style.marginLeft = (Number(config.dataset.width) - Number(config.dataset.button_width)) + 'px';\r\n                /* Исходные позиции бегунов сохраняю в конфиге */\r\n                initialButtonPosition(i, runners);\r\n            }\r\n            else if (orientation === 'vertical') {\r\n                button1.style.marginTop = config.dataset.height + 'px';\r\n                let button2 = document.querySelectorAll('[data-type=\"btn-second\"]')[i];\r\n                button2.style.marginTop = 0 + 'px';\r\n            }\r\n        }\r\n        i += 1;\r\n    });\r\n}\r\nexport function initialButtonPosition(i, runners) {\r\n    let config = document.querySelectorAll('.zdslider-config')[i];\r\n    let btn1 = document.querySelectorAll('[data-type=\"btn-first\"]')[i];\r\n    let initBtn1Pos = getCoords(btn1);\r\n    config.dataset.btn1_init_pos = String(initBtn1Pos.left);\r\n    if (runners === 2) {\r\n        let btn2 = document.querySelectorAll('[data-type=\"btn-second\"]')[i];\r\n        let initBtn2Pos = getCoords(btn2);\r\n        config.dataset.btn2_init_pos = initBtn2Pos.left;\r\n    }\r\n}\r\n","export let configObj = {\r\n    runner_number: 2,\r\n    min: 12,\r\n    max: 150,\r\n    discrete: 'no',\r\n    orientation: 'horizontal',\r\n};\r\n"],"names":["event","config","target","parentNode","querySelector","runnerNumber","Number","dataset","runners","$a3192e973d0a9b13$var$mouseDownBtnFirstSingle","mouseDownBtnFirstSingle","$a3192e973d0a9b13$var$mouseDownBtnFirstDouble","console","log","elem","slerNumber","inst","sler","document","querySelectorAll","interval","btn1","btn2","discreteStatus","discrete","interval_number","scale_length","slerCoords","$3fd06b33d56812f8$exports","getCoords","btn1Coords","btn2Coords","shiftX1","pageX","left","shiftX2","onmousemove","left2","right2","offsetWidth","localStorage","test","left2_2","right2_1","style","marginLeft","btn2_coord","String","btn2_init_pos","left1","right1","left1_2","right1_1","discretArr","discreteArray","range","integ","Math","floor","forEach","num","num_1","left1_1","width","num_2","btn2_tip","$40437623a5c415d0$exports","forTip","tip","left2_1","onmouseup","ranger","orientation","btn1_coord","offsetHeight","coords","getBoundingClientRect","top","min","max","step","stepArr","dividersArr","iterationArr","iter","maximus","iteration","item","i","push","length","_step","_iterator","$3fd06b33d56812f8$var$_createForOfIteratorHelper","s","n","done","el","value","err","e","f","_i","confInputStep","parent","setAttribute","iterationsArr","disabled","scaleArr","currentInst","currentScale","currentDivision","remove","division","Division","appendTo","DivisionSpan","scale","Scale","span","ScaleSpan","inner_HTML","hideTip","checked","elem1","classList","intervalNumber","btn1_init_pos","btn1_tip","mouseDownBtnFirstDouble","left2_3","interv","arrCount","coord","configMin","configMax","rangerHeight","height","rangerWidth","round","element","zdslider","add","runner_number","shiftY1","pageY","top1","down1","top1_2","down1_2","$a3192e973d0a9b13$exports","marginTop","$d32aa2ca4af24a60$var$mouseVertDownBtnFirstSingle","mouseVertDownBtnFirstSingle","shiftY2","top2","num1_1","top2_1","num1_2","top2_2","down2","down2_2","top1_3","top2_3","top1_4","top2_4","$d32aa2ca4af24a60$var$mouseVertDownBtnFirstDouble","down2_4","down1_4","top1_1","divisionLeft","divisionTop","numberForTip","buttonsNumber","divisionCoord","halfWidth","clientX","client_1","page_1","client_2","page_2","right","left_2","right_2","division_offsetWidth","left_3","division_3","left_4","division_4","division_coord","clientY","bottom","top_2","bottom_2","divisionOffsetHeight","top_3","top_4","_Button_instances","_Button_setup","_Division_instances","_Division_setup","_Panel_instances","_Panel_setup","__classPrivateFieldGet","receiver","state","kind","TypeError","has","call","get","Ranger","$85cf6bac9c610a50$var$_classCallCheck","this","$el","createElement","appendChild","Interval","Button","attr","number","type","mouseDownBtnFirst","mouseDownBtnSecond","$d32aa2ca4af24a60$exports","mouseVertDownBtnFirst","mouseVertDownBtnSecond","WeakSet","clickHandler","addEventListener","child","innerHTML","$542469aea8b02a9c$exports","clickMouse","Panel","$panel","$runCheckbox","$discreteCheckbox","$tipCheckbox","$orientCheckbox","$minNumber","$maxNumber","$stepNumber","$runLabel","$discreteLabel","$tipLabel","$orientLabel","$minLable","$maxLabel","$stepLabel","run","Settings","orient","instant","$878b1da0f78de726$exports","oneRunner","resetBtnCoord","twoRunners","showTip","$3d045a297c02a037$exports","orientationToggler","minInput","newScaleArr","makeScale","reValueTip","modifyScaleInput","reScale","maxInput","val","current","arrNumber","steps","split","map","parseFloat","currentIndex","indexOf","current_1","val_1","current_2","val_2","_a","_b","button1","button2","secondButton","rangerInterval","rangerScale","rangerScaleDivision","rangerScaleDivisionSpans","rangerButtons","$3d045a297c02a037$var$_createForOfIteratorHelper","_elem","window","body","btn1InitPos","btn2InitPos","sliderInit","configObj","scaleArrs","$bc2825c42aaa4c73$var$setStructure","$bc2825c42aaa4c73$var$sliderPositioning","allChecksListener","elements","counter","rangerDiv","button_1","button_2","settings","$85cf6bac9c610a50$exports","button_1_div","confInputMin","changeMinListener","confInputMax","changeMaxListener","changeStepListener","button_width","initialButtonPosition","$bc2825c42aaa4c73$var$initialButtonPosition","initBtn1Pos","initBtn2Pos","onload"],"version":3,"file":"index.26fbd7db.js.map"}